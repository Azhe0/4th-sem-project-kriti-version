// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model student {
  id         String  @id @default(cuid())
  email      String  @unique
  name       String
  assignment Decimal
  quiz       Decimal
  notes      notes[]
}

model teacher {
  id    String  @id @default(cuid())
  email String  @unique
  name  String
  notes notes[]
}

model notes {
  id        String  @id
  title     String
  content   String
  studentId String
  teacherId String
  student   student @relation(fields: [studentId], references: [id])
  teacher   teacher @relation(fields: [teacherId], references: [id])
}

model Assignment {
  id          String    @id @default(cuid())
  classCode   String
  subjectName String
  subjectCode String
  year        Int
  link        String
  deadline    DateTime
  description String?
}

model Note {
  id        Int      @id @default(autoincrement())
  title     String
  content   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}